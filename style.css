:root {
    --font-color: #31003d;
    --bg-color: #ced4e9;
    --primary-color: #00c6e0;
    --accent-color: #ff05f7;
    --similitude: 255, 255, 255;
    --contrast: 0, 0, 0;
    --border-width: 3px;
}

@media (prefers-color-scheme: dark) {
    :root {
        --font-color: #F2C0FF;
        --bg-color: #161C30;
        --primary-color: #1DE4FF;
        --accent-color: #F800EE;
        --similitude: 0, 0, 0;
        --contrast: 255, 255, 255;
    }
}

:root {
    font-family: "Roboto Mono", "Courier New", Courier, monospace;
    background-color: var(--bg-color);
    color: var(--font-color);
}

body {
    margin: 0;
}

section {
    min-height: 50svh;
    padding-bottom: 4rem;
}

h1 {
    font-size: 64px;
    margin: 0;
}

h2 {
    font-size: 36px;
    margin: 0;
}

h3 {
    font-size: 32px;
    margin: 0;
}

p {
    font-size: 20px;
    margin-top: 0;
}

::selection {
    background-color: var(--font-color);
    color: var(--bg-color);
}

.button {
    background-color: var(--bg-color);
    color: var(--font-color);
    display: flex;
    align-items: center;
    justify-content: center;

    border: var(--font-color) 1px solid;
    
    transition: box-shadow 0.25s ease-out;
    box-shadow: 0rem 0rem 0 var(--font-color);

    cursor: pointer;
}

.button[aria-disabled],
.button[disabled] {
    filter: grayscale();
    pointer-events: none;
}

.button svg, .button .icon {
    height: 75%;
    width: 75%;
}

.button-xs {
    height: 1rem;
    width: 1rem;
    margin: 0.25rem 0 0.25rem 0;
}

.button-xs:hover,
.button-xs:focus-visible {
    box-shadow: 0.125rem -0.125rem 0 var(--font-color);
}

.button-sm {
    height: 2rem;
    width: 2rem;
    margin: 0.4rem 0 0.4rem 0;
}

.button-sm:hover,
.button-sm:focus-visible {
    box-shadow: 0.2rem -0.2rem 0 var(--font-color);
}

.button-md {
    height: 3rem;
    width: 3rem;
    margin: 0.5rem 0 0.5rem 0;
}

.button-md:hover,.button-md:focus-visible {
    box-shadow: 0.25rem -0.25rem 0 var(--font-color);
}

.button-dynamic {
    padding: 0.5rem;
}

.button-dynamic:hover,
.button-dynamic:focus-visible {
    box-shadow: 0.25rem -0.25rem 0 var(--font-color);
}

.button-centered {
    margin-inline: auto;
}

.button:hover .icon,
.button:focus-visible .icon {
    background-image: linear-gradient(to bottom right, var(--primary-color), var(--accent-color));
}

.icon.icon {
    background-color: var(--font-color);
    -webkit-mask-size: 100% 100%;
    -webkit-mask-repeat: no-repeat;
    mask-size: 100% 100%;
    mask-repeat: no-repeat;
}

.icon-github {
    -webkit-mask: url(icons/github.svg);
    mask: url(icons/github.svg);
}

.icon-discord {
    -webkit-mask: url(icons/discord.svg);
    mask: url(icons/discord.svg);
}

.icon-mail {
    -webkit-mask: url(icons/mail.svg);
    mask: url(icons/mail.svg);
}

.icon-warning {
    -webkit-mask: url(icons/warning.svg);
    mask: url(icons/warning.svg);
}

.icon-source {
    -webkit-mask: url(icons/source.svg);
    mask: url(icons/source.svg);
}

.icon-info {
    -webkit-mask: url(icons/info.svg);
    mask: url(icons/info.svg);
}

.icon-close {
    -webkit-mask: url(icons/close.svg);
    mask: url(icons/close.svg);
}

.hyperlink {
    display: inline-block;
    color: var(--font-color);
    text-decoration-color: var(--font-color);
}

.hyperlink:hover,.hyperlink:focus-visible {
    color: var(--primary-color);
    text-decoration-color: var(--primary-color);
}

.hyperlink:visited:hover,.hyperlink:visited:focus-visible {
    color: var(--accent-color);
    text-decoration-color: var(--accent-color);
}

#dialog {
    padding: 0;
    border: 0;

    color: var(--font-color);
    background-color: var(--bg-color);

    width: min(580px, 90vw);
    max-height: 70vh;
    
    border-image: linear-gradient(to bottom right, var(--primary-color), var(--accent-color)) 1;
    border-width: var(--border-width);
    border-style: solid;
}

#dialog-close {
    position: absolute;
    top: 0;
    right: 0;

    margin: 1rem;

    font-weight: bold;
}

#dialog-content {
    margin: 1rem;
}

div:has(> table) {
    overflow-x: auto;
}

table {
    border-collapse: collapse;
    border: dotted 1px var(--font-color);
}

td {
    padding: 0.5rem;
    border: dotted 1px var(--font-color);
}

.gradient-text {
    width: min-content;
    background: linear-gradient(to right, var(--primary-color), var(--accent-color));
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.glint {
    position: relative;
    background-image: linear-gradient(-15deg, var(--font-color) 0 45%, white, var(--font-color) 55% 100%);
    background-size: 100% 300%;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: glint 5s linear infinite;
}

.glint.gradient-text {
    background-image:
        linear-gradient(-15deg, transparent 0 45%, white, transparent 55% 100%),
        linear-gradient(to right, var(--primary-color), var(--accent-color));
}

@keyframes glint {
    0% {
        background-position: 0 0;
    }
    40%, to {
        background-position: 0 -300%;
    }
}

.subtitle {
    margin-bottom: 0.5em;
    padding-left: 0.5em;
    width: min-content;
    white-space: nowrap;
    border-bottom: var(--primary-color) 0.0625em solid;
    position: relative;
}

.subtitle::after {
    content: '';
    display: block;
    height: 0.375em;
    width: 0.375em;
    background-color: var(--primary-color);
    border-radius: 50%;
    position: absolute;
    bottom: -0.25em;
    left: 0;
}

#links {
    position: fixed;
    left: 0;
    top: 50dvh;
    transform: translateY(-50%);
    width: 5rem;

    z-index: 5;

    border-image: linear-gradient(to bottom, var(--primary-color), var(--accent-color)) 1;
    border-width: 0 var(--border-width) 0 0;
    border-style: solid;

    background-color: var(--bg-color);

    --offset: calc(sqrt(2) * -1.5rem);
    box-shadow: 
        var(--bg-color) var(--offset) var(--offset),
        var(--bg-color) var(--offset) calc(-1*var(--offset));
}

#links::before,#links::after {
    content: '';
    display: block;
    width: 3rem;
    height: 6rem;

    background-color: var(--bg-color);

    position: absolute;
    z-index: -5;
    right: calc(-1 * var(--border-width));
}

#links::before {
    top: 0;
    transform-origin: top right;
    transform: rotate(45deg);
    border-top: var(--primary-color) var(--border-width) solid;
}

#links::after {
    bottom: 0;
    transform-origin: bottom right;
    transform: rotate(-45deg);
    border-bottom: var(--accent-color) var(--border-width) solid;
}

#links-overflow-clip {
    overflow: hidden;
    padding: 1rem;
}

#links-content {
    display: flex;
    flex-direction: row;
    align-items: center;
    
    translate: -3rem 0;
    width: fit-content;
    transition: translate 0.3s ease-out;
}

#responsive-description {
    width: 2rem;
    line-height: 2rem;
    writing-mode: vertical-lr;
    margin-right: 1rem;
}

#links ul {
    list-style: none;
    margin: 0;
    padding: 0;

    z-index: 10;
}

#navigation {
    white-space: nowrap;

    transition: width 0.3s ease-out;

    position: fixed;
    right: 0;
    top: 50dvh;
    transform: translateY(-50%);
    width: 4rem;

    z-index: 5;

    border-image: linear-gradient(to bottom, var(--primary-color), var(--accent-color)) 1;
    border-width: 0 0 0 var(--border-width);
    border-style: solid;

    background-color: var(--bg-color);

    --offset: calc(sqrt(2) * 1.5rem);
    box-shadow: 
        var(--bg-color) var(--offset) var(--offset),
        var(--bg-color) var(--offset) calc(-1*var(--offset));
}

#navigation::before,#navigation::after {
    content: '';
    display: block;
    width: 3rem;
    height: 6rem;

    background-color: var(--bg-color);

    position: absolute;
    z-index: -5;
    left: calc(-1 * var(--border-width));
}

#navigation::before {
    top: 0;
    transform-origin: top left;
    transform: rotate(-45deg);
    border-top: var(--primary-color) var(--border-width) solid;
}

#navigation::after {
    bottom: 0;
    transform-origin: bottom left;
    transform: rotate(45deg);
    border-bottom: var(--accent-color) var(--border-width) solid;
}

#navigation-overflow-clip {
    overflow: hidden;
    padding: 1rem;
}

#navigation-content {
    display: flex;
    flex-direction: row;
    align-items: center;

    width: fit-content;
    translate: calc(-100% + 2rem) 0;
    transition: translate 0.3s ease-out;
}

#navigation:hover,#navigation:focus-within {
    width: calc(var(--link-width) * 1ch + 2rem);
    opacity: 1;
}

#navigation:hover #navigation-content,
#navigation:focus-within #navigation-content {
    translate: 0 0;
}

@keyframes navigation-hover {
    from {
        translate: 0 0;
    }
    to {
        translate: 3rem 0;
    }
}

#navigation ul {
    list-style: none;
    margin: 0;
    padding: 0;
    height: min-content;

    z-index: 1;
}

#navigation li {
    width: min-content;
}

#current-header {
    width: 2rem;
    line-height: 2rem;
    writing-mode: vertical-lr;
    margin-left: 1rem;
}

#content {
    width: 50vw;
    margin-inline: auto;
}

@media screen and (max-width: 600px) {
    #content {
        width: 90vw;
    }

    .fade-out {
        animation: fade-out 1s linear;
        opacity: 0.25;
    }

    @keyframes fade-out {
        from {
            opacity: 1;
        }
    }

    #navigation,#links {
        transform: unset;
        transition: all 0.3s ease-out;
    }

    #navigation {
        opacity: 0.25;
        top: 0;
        transform: unset;
    }

    #links {
        opacity: 0.25;
        width: 4rem;
        top: unset;
        bottom: 0;
        transform: unset;
        transition: all 0.3s ease-out;
    }

    #links-content {
        translate: 0 0;
    }

    #links:hover,
    #links:focus-within {
        opacity: 1;
        width: 5rem;
    }

    #links:hover #links-content,
    #links:focus-within #links-content {
        translate: -3rem 0;
    }
}

#welcome {
    height: 100lvh;
    position: relative;
    top: 0;
    left: 0;
}

#welcome > div {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
}

#portrait {
    float: right;
    margin: 0 0 1.5rem 1.5rem;
    width: min(50%, 400px);
    
    mask: linear-gradient(-45deg, transparent 10%, white 10% 90%, transparent 90%);
}

@media screen and (max-width: 600px) {
    #portrait {
        float: none;
        max-width: 90%;
        max-height: 100%;

        margin: 5%;
    }
}

#skills > div {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 0.5rem;
}

.skill-gauge {
    position: relative;
    height: 250px;
}

@property --confidence {
    syntax: '<percentage>';
    initial-value: 0%;
    inherits: true
}

.skill-gauge div {
    position: absolute;
    text-align: center;
    font-size: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 12em;
    aspect-ratio: 1;

    left: 50%;
    top: 50%;
    translate: -50% -50%;

    margin: 0;
    padding: 0.1em;
    background-color: rgba(var(--similitude), 0.2);
    border: 0.5em solid var(--primary-color);
    border-radius: 50%;
    mask: linear-gradient(white, white) content-box,
        conic-gradient(from 180deg at 50% 50%, white var(--confidence), transparent 0%) border-box;
}

.skill-gauge p {
    margin: 0.5em;
    padding: 0;
}

@supports (animation-timeline: view()) {


    .skill-gauge div {
        animation-timeline: view(block 90vh 10vh);
        animation-name: progress;
        animation-fill-mode: backwards;
    }

    @keyframes progress {
        from {
            --confidence: 0%;
        }
    }
}

#projects > div {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 3rem;
    margin-top: 3rem;
}

#education > div,
#experience > div {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(700, 1fr));
    gap: 3rem;
    margin-top: 3rem;
}

article {
    border-image: linear-gradient(to bottom right, var(--primary-color), var(--accent-color)) 1;
    border-style: solid;
    border-width: 1.5px;

    position: relative;
    overflow: visible;

    background-color: rgba(var(--similitude), 0.2);
}

article::before,article::after {
    content: '';
    position: absolute;
    width: 3rem;

    aspect-ratio: 7 / 5;
    mask: var(--corner-svg);
    mask-size: contain;
}

article::before {
    top: 0;
    left: 0;
    translate: calc((10/70) * -100%) -20%;
    background: var(--primary-color);
}

article::after {
    bottom: 0;
    right: 0;
    translate: calc((10/70) * 100%) 20%;
    rotate: 180deg;
    background: var(--accent-color);
}

article > h3 {
    text-align: center;
    margin-top: 0.25em;
}

article > p {
    margin: 0.5rem;
}

article > footer {
    display: flex;
    justify-content: center;
}

.timespan {
    font-size: 0.85em;
    font-weight: lighter;
}

#impressum {
    border-image: linear-gradient(to right, var(--primary-color), var(--accent-color)) 1;
    border-width: var(--border-width) 0 0 0;
    border-style: groove;

    min-height: 10vh;
    max-width: max(50vw, 600px);

    margin-inline: auto;
}

#impressum p {
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
    text-align: center;
}

.parallax:first-of-type {
    z-index: -1;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100lvh;

    background-image: linear-gradient(var(--primary-color), var(--accent-color), var(--primary-color));
    opacity: 0.5;
    
    -webkit-mask: url(background.svg);
    mask: url(background.svg);
}

@supports (animation-timeline: scroll()) {
    .parallax.parallax {
        z-index: calc(-10 + var(--level));
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 200lvh;
        background-image: linear-gradient(var(--primary-color), var(--accent-color), var(--primary-color));
        background-size: 100% 50%;
        opacity: calc((1 - var(--level) / 10)/3);

        -webkit-mask: url(background.svg) calc(-13vw * var(--level)) calc(-17% * var(--level));
        -webkit-mask-size: auto 50%;
        mask: url(background.svg) calc(-13vw * var(--level)) calc(-17% * var(--level));
        mask-size: auto 50%;

        animation-timeline: scroll();
        animation-name: parallax;
        animation-iteration-count: calc(2 / var(--level));
        animation-timing-function: linear;
    }

    @keyframes parallax {
        from {
            translate: 0 0;
        }
        25%,75% {
            opacity: 0%;
        }
        50% {
            opacity: calc(1 - var(--level) / 10);
        }
        to {
            translate: 0 -50%;
        }
    }
}
